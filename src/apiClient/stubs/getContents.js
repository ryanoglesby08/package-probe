export default {
  name: 'telus-isomorphic-starter-kit',
  version: '1.0.0',
  private: true,
  license: 'proprietary',
  description: 'TELUS branded isomorphic React|Redux single page app.',
  author: 'TELUS',
  engines: {
    node: '>=8',
  },
  dependencies: {
    '@newrelic/native-metrics': '^2.1.2',
    '@tds/core-box': '^1.0.0',
    '@tds/core-chevron-link': '^1.0.0',
    '@tds/core-colours': '^1.0.0',
    '@tds/core-css-reset': '^1.0.0',
    '@tds/core-dimple-divider': '^1.0.0',
    '@tds/core-display-heading': '^1.0.0',
    '@tds/core-flex-grid': '^1.0.0',
    '@tds/core-heading': '^1.0.0',
    '@tds/core-link': '^1.0.0',
    '@tds/core-paragraph': '^1.0.0',
    '@tds/core-spinner': '^1.0.0',
    '@tds/core-text': '^1.0.0',
    '@telusdigital/express-locale': '^2.0.1',
    '@telusdigital/isomorphic-core': '^7.2.0',
    '@telusdigital/winston-logger': '^1.1.0',
    classnames: '^2.2.5',
    compression: '^1.7.1',
    'cookie-parser': '^1.4.3',
    express: '^4.16.1',
    'express-winston': '^2.4.0',
    helmet: '^3.8.2',
    history: '^3.0.0',
    'ignore-styles': '^5.0.1',
    immutable: '^3.8.2',
    'isomorphic-fetch': '^2.2.1',
    newrelic: '^2.2.2',
    'prop-types': '^15.6.0',
    react: '^16.0.0',
    'react-dom': '^16.0.0',
    'react-helmet': '^5.2.0',
    'react-redux': '^5.0.6',
    'react-router': '^3.2.0',
    redux: '^3.7.2',
  },
  devDependencies: {
    '@telusdigital/eslint-config': '^1.2.0',
    'assets-webpack-plugin': '^3.5.1',
    autoprefixer: '^7.1.5',
    'babel-cli': '^6.26.0',
    'babel-core': '^6.26.0',
    'babel-eslint': '^8.0.2',
    'babel-jest': '^21.2.0',
    'babel-loader': '^7.1.2',
    'babel-plugin-dynamic-import-node': '^1.2.0',
    'babel-plugin-react-transform': '^3.0.0',
    'babel-preset-env': '^1.6.0',
    'babel-preset-react': '^6.24.1',
    'babel-preset-react-optimize': '^1.0.1',
    'babel-preset-stage-2': '^6.24.1',
    'babel-runtime': '^6.26.0',
    chalk: '^2.1.0',
    'css-loader': '^0.28.7',
    'css-mediaquery': '^0.1.2',
    'cz-conventional-changelog': '^2.0.0',
    enzyme: '^3.1.0',
    'enzyme-adapter-react-16': '^1.1.1',
    'enzyme-to-json': '^3.1.2',
    eslint: '^4.10.0',
    'eslint-loader': '^1.9.0',
    'eslint-plugin-import': '^2.8.0',
    'eslint-plugin-jest': '^21.2.0',
    'eslint-plugin-jsx-a11y': '^6.0.2',
    'eslint-plugin-react': '^7.4.0',
    expect: '^21.2.1',
    'extract-text-webpack-plugin': '^3.0.1',
    'file-loader': '^1.1.5',
    foreman: '^2.0.0',
    jest: '^21.2.1',
    'node-sass': '^4.5.3',
    nodemon: '^1.12.1',
    nsp: '^3.1.0',
    open: '0.0.5',
    'optimize-css-assets-webpack-plugin': '3.2.0',
    prompt: '^1.0.0',
    'react-addons-test-utils': '^15.6.2',
    'react-test-renderer': '^16.0.0',
    replace: '^0.3.0',
    rimraf: '^2.6.2',
    'sass-loader': '^6.0.6',
    'sonarqube-scanner-node': '^0.0.7',
    'style-loader': '^0.19.0',
    'url-loader': '^0.6.2',
    webpack: '^3.6.0',
    'webpack-bundle-analyzer': '^2.9.0',
    'webpack-merge': '^4.1.0',
  },
  scripts: {
    babelrc: 'node .babelrc.js',
    predev: 'yarn run babelrc',
    dev: 'yarn run development',
    development: 'APP_ENV=development NODE_ENV=development nf -p 3000 start',
    start: 'NODE_ENV=production BABEL_ENV=node babel-node src/server --colors',
    'start:dev': 'yarn run build && APP_ENV=development yarn start',
    prebuild: 'yarn run clean && yarn run babelrc',
    build: 'NODE_ENV=production webpack -p --progress --colors',
    'prebuild:dev': 'yarn run clean && yarn run babelrc',
    'build:dev': 'webpack --color -d --watch --devtool inline-source-map',
    nodemon: 'BABEL_ENV=node nodemon --watch src src/server -e js,jsx -I --exec babel-node -i dist',
    clean: 'rimraf dist && mkdir -p dist',
    test: 'yarn run lint && yarn run unit && yarn run security',
    'test:sonarqube': 'yarn run test && yarn run sonarqube',
    lint: "eslint 'src' --config .eslintrc --ext .js,.jsx",
    'lint:fix': 'yarn run lint --fix',
    unit: 'jest',
    'unit:clear': 'jest -u',
    'unit:watch': 'jest --watchAll',
    security: 'nsp check',
    preanalyze:
      'NODE_ENV=production webpack --config webpack.config.babel.js --profile --json > .analyze.json',
    analyze: 'webpack-bundle-analyzer .analyze.json',
    'open:cover': 'yarn run test && open coverage/lcov-report/index.html',
    sonarqube:
      'sonarqube-scanner-node -Dsonar.login=${SONARQUBE_TOKEN} -Dsonar.projectVersion=${VERSION:-local}',
    commit: 'git-cz',
  },
}
